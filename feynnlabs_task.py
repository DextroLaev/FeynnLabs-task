# -*- coding: utf-8 -*-
"""Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sb
from sklearn.preprocessing import LabelEncoder

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVC

df = pd.read_csv("Crop_recommendation.csv")

label = df.loc[:,'label']

le = LabelEncoder()
le.fit(label)
label = le.transform(label)

df.head()

"""# Data Preprocessing"""

columns = df.loc[:,:'rainfall'].columns
fig,ax = plt.subplots(4,2,figsize=(15,15))
for i in range(len(df)):
    try:
        sb.distplot(df.iloc[:,i],ax=ax[i//2,i%2])
    except:
        pass
plt.show()

df['K'] = np.log(df['K'])
df['humidity'] = np.log(df['humidity'])
df['rainfall'] = np.log(df['rainfall'])

sb.heatmap(df.corr(),annot=True)

df['N'] = df['N']/max(df['N'])
df['P'] = df['P']/max(df['P'])
df['K'] = df['K']/max(df['K'])
df['temperature'] = df['temperature']/max(df['temperature'])
df['humidity'] = df['humidity']/max(df['humidity'])
df['ph'] = df['ph']/max(df['ph'])
df['rainfall'] = df['rainfall']/max(df['rainfall'])

data = df.loc[:,:'rainfall']

train_data,test_data,train_label,test_label = train_test_split(data,label,test_size=0.25)
regr = LinearRegression()
regr.fit(train_data,train_label)
print(regr.score(test_data,test_label))

svclassifier = SVC(kernel='rbf')
svclassifier.fit(train_data,train_label)

y_pred = svclassifier.predict(test_data)

from sklearn.metrics import classification_report
print(classification_report(test_label,y_pred))

